name: Create a release

# Use this workflow to:
# - Create a release from a branch
# - Update major and minor tags when a release is published

on:
  # Run when manually triggered
  workflow_dispatch:
    inputs:
      # User inputs the release version, for example `2.2.1`
      version:
        description: 'Release version to create, for example 2.2.1'
        required: true
        default: "2.2.1"
  # Run when a release is published
  release:
    types: [published]

defaults:
  run:
    shell: bash

env:
  GIT_AUTHOR_NAME: ${{ github.repository_owner }}
  GIT_AUTHOR_EMAIL: ${{ github.repository_owner }}@users.noreply.github.com

jobs:
  create-release:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-20.04
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      # Check out this repository at the same ref that triggered
      # this workflow run
      - uses: actions/checkout@v2

      # Ensure the specified version has a section in CHANGELOG.md
      - name: Check CHANGELOG.md for '${{ github.event.inputs.version }}'
        id: changelog
        run: |
          _ver="${{ github.event.inputs.version }}"
          _changelog=
          if grep -Fq "## [${_ver}]" docs/CHANGELOG.md; then
            echo "Found '## [${_ver}]' in CHANGELOG.md :+1:"
          else
            echo "FAIL: Did not find '## [${_ver}]' in CHANGELOG.md"
            exit 1
          fi
          # TODO: Make this :point_down: actually work
          _changelog=":shrug:"
          echo "Set changelog to '${_changelog}'."
          echo "::set-output name=changelog::${_changelog}"

      # Create the draft release
      # https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#get-a-release
      # https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#create-a-release
      # https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#get-the-latest-release

      - name: Create the draft release
        id: mkrel
        run: |
          _ver="${{ github.event.inputs.version }}"
          _tag="v${_ver}"
          _repo="${{ github.repository }}"
          _relbranch="${GITHUB_REF#refs/heads/}"
          echo "${_ver} ${_tag} ${_repo} ${_relbranch}"
          _data="{  \"tag_name\": \"${_tag}\",
                    \"target_commitish\": \"${_relbranch}\",
                    \"name\": \"${_repo#*/} ${_tag}\",
                    \"body\": \"words words words\",
                    \"draft\": true }"
          echo "${_data}"
          # Create the draft release
          echo "${_data}" | \
          GITHUB_TOKEN=${{ secrets.PAT }} \
          gh api -X POST /repos/:owner/:repo/releases --input -

  # When a release is published, update short
  # version tags, for example v2 and v2.2
  update-tags:
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-20.04
    steps:
      # Check out this repository at the same ref that triggered
      # this workflow run
      - uses: actions/checkout@v2

      # Update short version tags, for example v2 and v2.2
      - name: Update major and minor version tags
        id: roll-tags
        run: |
          # Set up variables.
          TAG="${INPUT_TAG:-${GITHUB_REF#refs/tags/}}" # v2.2.0
          MINOR="${TAG%.*}"                            # v2.2
          MAJOR="${MINOR%.*}"                          # v2
          MESSAGE="Release ${TAG}"
          # Set up Git.
          git config user.name "${GIT_AUTHOR_NAME}"
          git config user.email "${GIT_AUTHOR_EMAIL}"
          # Update MAJOR/MINOR tag
          git tag -fa "${MAJOR}" -m "${MESSAGE}"
          git tag -fa "${MINOR}" -m "${MESSAGE}"
          # Push MAJOR/MINOR tag
          git push --force origin "${MINOR}"
          git push --force origin "${MAJOR}"
