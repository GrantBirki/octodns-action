name: Create a draft release

on:
  # Run when manually triggered
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version to create, for example 2.3.0'
        required: true
        default: "2.3.0"
  # Run when a release branch is pushed
  push:
    branches:
      - 'release-*.*.*'

defaults:
  run:
    shell: bash

jobs:

  meta:
    name: Parse event data into outputs
    runs-on: ubuntu-20.04
    outputs:
      ver: ${{ steps.get-ver.outputs.ver }}
      tag: ${{ steps.get-tag.outputs.tag }}
      branch: ${{ steps.get-branch.outputs.branch }}
      pr: ${{ steps.get-pr.outputs.pr }}
      data: ${{ steps.get-data.outputs.data }}
    steps:
      - name: Checkout ${{ github.repository }}:${{ github.ref }}
        uses: actions/checkout@v2
      - name: 'ver: Version number for this release'
        id: get-ver
        run: |
          case "${{ github.event_name }}" in
            "workflow_dispatch")
              _ver="${{ github.event.inputs.version }}" ;;
            "push")
              _ver="${GITHUB_REF#refs/heads/release-}}" ;;
            *)
              exit 1
          esac
          echo "::set-output name=ver::${_ver}"
      - name: 'tag: Tag for this release'
        # TODO: Fail if tag already exists
        id: get-tag
        run: |
          _tag="v${{ steps.get-ver.outputs.ver }}"
          echo "::set-output name=tag::${_tag}"
      - name: 'branch: Branch for this release'
        # TODO: Create branch, if it does not exist
        id: get-branch
        run: |
          _branch="release-${{ steps.get-ver.outputs.ver }}"
          echo "::set-output name=branch::${_branch}"
      - name: 'data: Payload for releases API call'
        # TODO: Ensure output is usable as JSON
        id: get-data
        run: |
          _repo="${{ github.repository }}"
          _ver="v${{ steps.get-ver.outputs.ver }}"
          _tag="${{ steps.get-tag.outputs.tag }}"
          _branch="${{ steps.get-branch.outputs.branch }}"
          echo "${_ver} ${_tag} ${_repo} ${_branch}"
          _data="{  \"tag_name\": \"${_tag}\",
                    \"target_commitish\": \"${_branch}\",
                    \"name\": \"${_repo#*/} ${_tag}\",
                    \"body\": \"words words words\",
                    \"draft\": true }"
          echo "${_data}"
          echo "::set-output name=data::${_data}"

  create-release:
    name: Create release ${{ steps.get-tag.outputs.tag }}
    needs: meta
    environment: uses-pat
    runs-on: ubuntu-20.04
    steps:
      - name: Create the draft release
        run: |
          _data="${{ needs.meta.outputs.data }}"
          echo "${_data}" | \
          GITHUB_TOKEN=${{ secrets.PAT }} \
          gh api -X POST /repos/:owner/:repo/releases --input -
